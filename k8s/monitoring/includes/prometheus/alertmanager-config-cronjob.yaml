---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: alertmanager-config-creator
  namespace: monitoring
spec:
  schedule: "* * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        cronjob: alertmanager-config-creator
    spec:
      template:
        spec:
          restartPolicy: Never
          serviceAccount: alertmanager-config-creator
          volumes:
          - name: secrets
            emptyDir:
              medium: Memory
          - name: vault-token
            emptyDir:
              medium: Memory
          - name: consul-template-config
            configMap:
              name: consul-template
          initContainers:
          - name: vault-authenticator
            image: registry.hub.docker.com/sethvargo/vault-kubernetes-authenticator:0.1.0
            volumeMounts:
            - name: vault-token
              mountPath: /home/vault
            env:
            - name: TOKEN_DEST_PATH
              value: /home/vault/.vault-token
            - name: VAULT_ADDR
              value: "http://vs-vault.vault:8200"
            - name: VAULT_ROLE
              value: monitoring
          - name: consul-template
            image: registry.hub.docker.com/hashicorp/consul-template:0.19.5-scratch
            command:
            - /consul-template
            - -config
            - /etc/consul-template/config.hcl
            - -log-level
            - debug
            - -once
            volumeMounts:
            - name: secrets
              mountPath: /etc/data
            - name: vault-token
              mountPath: /home/vault
            - name: consul-template-config
              mountPath: /etc/consul-template
            env:
            - name: HOME
              value: /home/vault
            - name: VAULT_ADDR
              value: "http://vs-vault.vault:8200"
            - name: VAULT_SKIP_VERIFY
              value: "true"
          containers:
          - name: create-config-map
            image: gcr.io/google_containers/hyperkube:v1.15.5
            command:
            - /bin/sh
            - -c
            - |-
              kubectl create secret generic alertmanager-po-promop-alertmanager \
                --from-file=/etc/data/alertmanager.yaml \
                -n monitoring \
                -o yaml \
                --dry-run > secret.yaml && \
              kubectl apply -f secret.yaml
            volumeMounts:
            - name: secrets
              mountPath: /etc/data
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: consul-template
  namespace: monitoring
data:
  config.hcl: |
    template {
      error_on_missing_key = true
      contents = <<EOH
        {{- with secret "secret/monitoring/alertmanager-config" -}}
        {{- .Data.text -}}
        {{- end -}}
      EOH
      destination = "/etc/data/alertmanager.yaml"
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alertmanager-config-creator
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-creator
  namespace: monitoring
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "update", "get", "list", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: create-secrets
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: alertmanager-config-creator
  namespace: monitoring
roleRef:
  kind: Role
  name: configmap-creator
  apiGroup: rbac.authorization.k8s.io
