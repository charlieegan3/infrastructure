apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeip
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeip
  template:
      metadata:
        labels:
          app: kubeip
      spec:
        serviceAccountName: kubeip-sa
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        containers:
        - name: "kubeip"
          image: doitintl/kubeip:latest
          env: # TODO condense this mess
          - name: "KUBEIP_LABELKEY"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_LABELKEY"
                name: "kubeip-config"
          - name: "KUBEIP_LABELVALUE"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_LABELVALUE"
                name: "kubeip-config"
          - name: "KUBEIP_NODEPOOL"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_NODEPOOL"
                name: "kubeip-config"
          - name: "KUBEIP_FORCEASSIGNMENT"
            valueFrom:
              configMapKeyRef:
                key: "KUBEIP_FORCEASSIGNMENT"
                name: "kubeip-config"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeip-sa
  namespace: kube-system
  annotations:
    iam.gke.io/gcp-service-account: kubeip@charlieegan3-cluster.iam.gserviceaccount.com
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeip-sa
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get","list","watch","patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","list","watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeip-sa
subjects:
  - kind: ServiceAccount
    name: kubeip-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kubeip-sa
  apiGroup: rbac.authorization.k8s.io
